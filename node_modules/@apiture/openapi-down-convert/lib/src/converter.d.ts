export interface ConverterOptions {
    verbose?: boolean;
    deleteExampleWithId?: boolean;
    allOfTransform?: boolean;
    authorizationUrl?: string;
    tokenUrl?: string;
    scopeDescriptionFile?: string;
}
export declare class Converter {
    private openapi30;
    private verbose;
    private deleteExampleWithId;
    private allOfTransform;
    private authorizationUrl;
    private tokenUrl;
    private scopeDescriptions;
    constructor(openapiDocument: object, options?: ConverterOptions);
    private loadScopeDescriptions;
    private log;
    private warn;
    convert(): object;
    convertJsonSchemaExamples(): void;
    private walkNestedSchemaObjects;
    convertConstToEnum(): void;
    convertNullableTypeArray(): void;
    removeUnsupportedSchemaKeywords(): void;
    private json;
    convertSecuritySchemes(): void;
    simplifyNonSchemaRef(): void;
    removeLicenseIdentifier(): void;
    convertSchemaRef(): void;
    static deepClone(obj: object): object;
}
